---
import type { InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import BlogPostList from "../../../components/BlogPostList.astro";
import slugify from "../../../utils/slugify";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog", ({ data }) => !data.draft);
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts
      .filter((post) => post.data.tags.includes(tag))
      .sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());

    return {
      params: { tag: slugify(tag) },
      props: { posts: filteredPosts, tagLabel: tag },
    };
  });
}
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { posts, tagLabel } = Astro.props;
---

<BlogPostList posts={posts} tagLabel={tagLabel} />
